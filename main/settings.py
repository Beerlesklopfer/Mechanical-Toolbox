"""
Django settings for MechanicalToolbox project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-8@3tciyl*i-!emfy$5b#ja&6-31*bu7vof=x&c2#qz-5)-78c+'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    'localhost',
    '127.0.0.1',
]

REST_FRAMEWORK = {
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
    ],
    'DEFAULT_PARSER_CLASSES': [
        'rest_framework.parsers.JSONParser',
    ]
}

# Authentication settings
LOGIN_REDIRECT_URL = 'home'  # Redirects to home page after login
LOGOUT_REDIRECT_URL = 'home'  # Redirects to home page after logout
LOGIN_URL = 'login'  # URL where the login page is located

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'rest_framework',
    "django_htmx",
    # Third-party apps
    #'django_htmx',  # HTMX integration
    
    # Local apps - Mechanical Toolbox components
    'main',  # Main project app
    'fits',                # Fits components
    'fasteners',           # Fasteners components
    'tolerances',          # Tolerances components
    'bearings',            # Bearings components
    'gears',               # Gears components
    'springs',             # Springs components
    'shafts',              # Shafts components
    'couplings',           # Couplings components
    
    # Optional productivity apps
    'django_extensions',   # Useful development tools
    # 'debug_toolbar',       # Debugging toolbar
    # 'django_celery_beat',  # Periodic task scheduling
    ]

# only serve static files via django when in DEBUG mode
# otherwise let the web server serve them
# https://docs.djangoproject.com/en/5.2/howto/static-files/
if DEBUG:
    INSTALLED_APPS += [
        'debug_toolbar',
        'django.contrib.staticfiles',
    ]
    STATIC_URL = "static/"
    STATIC_ROOT = BASE_DIR / "static"
    STATICFILES_DIRS = [
        BASE_DIR / "main/staticfiles",
        BASE_DIR / "fits/staticfiles",
    ]
    MEDIA_URL = '/media/'
    MEDIA_ROOT = BASE_DIR / "media"
    MEDIAFILES_DIRS = [
        BASE_DIR / "main/mediafiles",
    ]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    "django_htmx.middleware.HtmxMiddleware",
]

ROOT_URLCONF = 'main.urls'

if DEBUG:
    MIDDLEWARE += [
        'debug_toolbar.middleware.DebugToolbarMiddleware',
    ]

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            BASE_DIR / 'templates',
            # Main project templates
            BASE_DIR / 'main' / 'templates',
            # App-specific template directories
            # BASE_DIR / 'templates' / 'fasteners',
            # BASE_DIR / 'templates' / 'bearings',
            # BASE_DIR / 'templates' / 'gears',
            # BASE_DIR / 'templates' / 'springs',
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'main.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

CUSTOM_APPS = [
    app for app in INSTALLED_APPS
    if not app.startswith("django") and app != "main" and not app.startswith("rest") and not app.startswith("debug")
]

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
